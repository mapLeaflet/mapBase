{"version":3,"sources":["MapSource.js"],"names":["window","factory","exports","console","log","module","require","define","L","mapSource","this","TileLayer","ChinaProvider","extend","initialize","type","options","providers","parts","split","providerName","mapName","mapType","url","subdomains","Subdomains","prototype","call","TianDiTu","Normal","Map","Annotion","Satellite","Terrain","GaoDe","Google","Geoq","Color","PurplishBlue","Gray","Warm","Cold","tileLayer","chinaProvider","MapSource","info","tianditu","zoom","normala","normalm","imgm","imga","gaode"],"mappings":"CAAA,SAAWA,EAAQC,GACQ,iBAAZC,SACPC,QAAQC,IAAI,YACZC,OAAOH,QAAUD,EAAQK,QAAQ,aAGR,mBAAXC,QACdJ,QAAQC,IAAI,cAGZG,QAAQ,WAAYN,GAGpBM,OAAO,SAAUD,EAASJ,EAASG,GAE/BA,EAAOH,QAAQD,EAAQD,EAAOQ,OAIlCL,QAAQC,IAAI,MAEZJ,EAAOS,UAAYR,EAAQD,EAAOQ,KAGvCE,KAAM,SAAUF,GAIfA,EAAEG,UAAUC,cAAgBJ,EAAEG,UAAUE,QAEpCC,WAAY,SAAUC,EAAMC,GACxB,IAAIC,EAAYT,EAAEG,UAAUC,cAAcK,UAEtCC,EAAQH,EAAKI,MAAM,KAEnBC,EAAeF,EAAM,GACrBG,EAAUH,EAAM,GAChBI,EAAUJ,EAAM,GAEhBK,EAAMN,EAAUG,GAAcC,GAASC,GAC3CN,EAAQQ,WAAaP,EAAUG,GAAcK,WAE7CjB,EAAEG,UAAUe,UAAUZ,WAAWa,KAAKjB,KAAMa,EAAKP,MAIzDR,EAAEG,UAAUC,cAAcK,WACtBW,UACIC,QACIC,IAAK,+DACLC,SAAU,gEAEdC,WACIF,IAAK,+DACLC,SAAU,gEAEdE,SACIH,IAAK,+DACLC,SAAU,gEAEdN,YAAa,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAGpDS,OACIL,QACIC,IAAK,mGAETE,WACIF,IAAK,wEACLC,SAAU,yEAEdN,YAAa,IAAK,IAAK,IAAK,MAIhCU,QACIN,QACIC,IAAK,mEAETE,WACIF,IAAK,mEAETL,eAGJW,MACIP,QACIC,IAAK,0FACLO,MAAO,4FACPC,aAAc,mGACdC,KAAM,2FACNC,KAAM,2FACNC,KAAM,4FAEVhB,gBAKRjB,EAAEkC,UAAUC,cAAgB,SAAU5B,EAAMC,GACxC,OAAO,IAAIR,EAAEG,UAAUC,cAAcG,EAAMC,IAM/C,IAAI4B,EAAY,WAEZzC,QAAQ0C,KAAK,iBA4CjB,OAtCAD,EAAUlB,UAAUoB,SAAW,SAAUC,GAErC,OAGIC,QAASxC,EAAEkC,UAAUC,cAAc,2BAA4BI,GAG/DE,QAASzC,EAAEkC,UAAUC,cAAc,sBAAuBI,GAG1DG,KAAM1C,EAAEkC,UAAUC,cAAc,yBAA0BI,GAG1DI,KAAM3C,EAAEkC,UAAUC,cAAc,8BAA+BI,KAUvEH,EAAUlB,UAAU0B,MAAQ,SAAUL,GAClC,OAEIE,QAASzC,EAAEkC,UAAUC,cAAc,mBAAoBI,GAGvDG,KAAM1C,EAAEkC,UAAUC,cAAc,sBAAuBI,GAGvDI,KAAM3C,EAAEkC,UAAUC,cAAc,2BAA4BI,KAK7D,IAAIH","file":"MapSource.js","sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        console.log('CommonJS')\n        module.exports = factory(require('leaflet'));\n\n\n    } else if (typeof define === 'function') {\n        console.log('amd or cmd')\n\n        //amd调用这个\n        define(['leaflet'], factory);\n\n        //cmd 调用这个\n        define(function (require, exports, module) {\n\n            module.exports=factory(window.L)\n        });\n\n    } else {\n        console.log('原生')\n\n        window.mapSource = factory(window.L)\n\n    }\n})(this, function (L) {\n    //module ...\n    // var L=window.L;\n\n    L.TileLayer.ChinaProvider = L.TileLayer.extend({\n\n        initialize: function (type, options) { // (type, Object)\n            var providers = L.TileLayer.ChinaProvider.providers;\n\n            var parts = type.split('.');\n\n            var providerName = parts[0];\n            var mapName = parts[1];\n            var mapType = parts[2];\n\n            var url = providers[providerName][mapName][mapType];\n            options.subdomains = providers[providerName].Subdomains;\n\n            L.TileLayer.prototype.initialize.call(this, url, options);\n        }\n    });\n\n    L.TileLayer.ChinaProvider.providers = {\n        TianDiTu: {\n            Normal: {\n                Map: \"http://t{s}.tianditu.cn/DataServer?T=vec_w&X={x}&Y={y}&L={z}\",\n                Annotion: \"http://t{s}.tianditu.cn/DataServer?T=cva_w&X={x}&Y={y}&L={z}\",\n            },\n            Satellite: {\n                Map: \"http://t{s}.tianditu.cn/DataServer?T=img_w&X={x}&Y={y}&L={z}\",\n                Annotion: \"http://t{s}.tianditu.cn/DataServer?T=cia_w&X={x}&Y={y}&L={z}\",\n            },\n            Terrain: {\n                Map: \"http://t{s}.tianditu.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}\",\n                Annotion: \"http://t{s}.tianditu.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}\",\n            },\n            Subdomains: ['0', '1', '2', '3', '4', '5', '6', '7']\n        },\n\n        GaoDe: {\n            Normal: {\n                Map: 'http://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\n            },\n            Satellite: {\n                Map: 'http://webst0{s}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n                Annotion: 'http://webst0{s}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}'\n            },\n            Subdomains: [\"1\", \"2\", \"3\", \"4\"]\n        },\n\n\n        Google: {\n            Normal: {\n                Map: \"http://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\n            },\n            Satellite: {\n                Map: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\n            },\n            Subdomains: []\n        },\n\n        Geoq: {\n            Normal: {\n                Map: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer/tile/{z}/{y}/{x}\",\n                Color: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetColor/MapServer/tile/{z}/{y}/{x}\",\n                PurplishBlue: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\",\n                Gray: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}\",\n                Warm: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}\",\n                Cold: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetCold/MapServer/tile/{z}/{y}/{x}\"\n            },\n            Subdomains: []\n\n        }\n    };\n\n    L.tileLayer.chinaProvider = function (type, options) {\n        return new L.TileLayer.ChinaProvider(type, options);\n    };\n\n\n    //地图默认配置 zoom 地图最小缩放级别\n    //{maxZoom: '最大缩放级别', minZoom: '最小缩放级别'}\n    var MapSource = function () {\n\n        console.info(\"MapSource ok\")\n\n    };\n\n\n    //天地图\n    MapSource.prototype.tianditu = function (zoom) {\n\n        return {\n\n            //平面地图 道路地名\n            normala: L.tileLayer.chinaProvider('TianDiTu.Normal.Annotion', zoom),\n\n            //平面地图 地区名称\n            normalm: L.tileLayer.chinaProvider('TianDiTu.Normal.Map', zoom),\n\n            //卫星地图\n            imgm: L.tileLayer.chinaProvider('TianDiTu.Satellite.Map', zoom),\n\n            //卫星地图 道路地名\n            imga: L.tileLayer.chinaProvider('TianDiTu.Satellite.Annotion', zoom)\n\n\n        };\n\n\n    };\n\n\n    //高德地图\n    MapSource.prototype.gaode = function (zoom) {\n        return {\n            //平面地图 地区名称 道路地名\n            normalm: L.tileLayer.chinaProvider('GaoDe.Normal.Map', zoom),\n\n            //卫星地图\n            imgm: L.tileLayer.chinaProvider('GaoDe.Satellite.Map', zoom),\n\n            //卫星地图 道路地名\n            imga: L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion', zoom)\n        };\n    };\n\n\n    return new MapSource\n\n});"]}